*******************************************************************************************************
Docker:
*******************************************************************************************************
--> Docker is an Open Source Centralized platform designed to create, deploy and run application 
--> Docker uses containers on the host OS to run appliations it allow applications to use the same 
linux kernel as a system on the host computer, rather than creating a whole virtual OS.
--> we can install docker on any os Docker engine runs motively on linux distribution 
--> Docker is written in "go" language.
--> Docker is a tool that perform OS level virtualization, also known as containerization.
--> Docker was first release in march 2013, it is developed by soloman hykes and sebastian patil.
--> Docker is a set pf platform as a service that uses OS level virtualization whenever VMware uses
hardware level virtualization.


*******************************************************************************************************
Advantages of Docker:
*******************************************************************************************************
--> No pre-allocation of Ram.
--> CI Efficiency, Docker enables us to build a container images and use that same images across every
step of the deployment process.
--> less cost.
--> it is lite weight 
--> it can run on physical h/w , virtual h/w or on cloud.
--> it took very less time to create container.


*******************************************************************************************************
Disadvantages of Docker:
*******************************************************************************************************
--> Docker is not a good solution for application that require rich GUI.
--> Difficult to manage large amount of container .
--> Docker does not provide cross-platform compatibility means, if an application designed to run in a
dokcer. if we create Container on window, then we cant run these on linux or vice-verca.
--> Docker is suitable when the development OS and testing OS are same, if the OS is different we need
to use VM.
--> No solution for data recovery and backup.


*******************************************************************************************************
Components of docker:
*******************************************************************************************************
Docker daimon :
IT is responsible for runs on the host OS , it is responsible for running containers to, manages docker
services, docker daemoncan communicate with other daemon

Docker client: 
Docker user can interact with docker through a client 
docker client uses commands and rest api to communicate with the docker daemon 
when a client runs any server command on the docker client terminal, the client terminal sends these 
docker command to the docker daemon 
it is possible for docker client to communicate with more than one daemon.

Docker host:
Docker host is used to provide an environment to execute and run application it contains the docker 
daemon images containers network and storages.

********************************************************************************************************
Docker Hub and Registry
********************************************************************************************************
--> there are two types of registry in the docker.
    1) Public Registry: Public registry is also called as docker hub.
    2) Private Registry: It is used to share inages within the enterprise or Organization.

********************************************************************************************************
Docker Images: 
********************************************************************************************************
-->Docker images are the read only binary template used to create binary template used to create docker
container.( Single file with all dependencies and Configuration required to run a program)

ways to create an Images.
1) Take images from dokcer hub.
2) Create images from dokcer file.
3) create images from existing dokcer container.

********************************************************************************************************
Docker Container:
********************************************************************************************************
--> Container hold the entire package that is needed to run the application, In other word, we can say 
that the image is a template and the container is a template and the container is a copy of that template.
--> Container is like a virtual Machine.
--> Images becomes Container when these run on dokcer engine.

********************************************************************************************************
Basic Components of Docker 
********************************************************************************************************
--> To see all images presents in our local machine .
    # docker images
--> To find out images in dokcer hub.
    # docker search ubuntu (ubuntu::image name)
--> To download images from dockerhub to local machine
    # docker pull jenkins
--> to run and give name to a container.
    # docker run -itd --name mayur ubuntu /bin/bash (mayur::new name of container , ubantu::images 
pulled from dokcer hub, i::interactive mode, t::terminal, d ::used to exit from container without
shutdown)
-->  To start container 
    # docker start mayur 
--> To go inside container
    # docker attach mayur
--> To see all container 
    # docker ps -a (start and stoped)
    # dokcer ps    (running container)
--> To stop container 
    # docker stop mayur
--> To delete container
    # docker rm mayur (we can't delete running container, we need to stop that before deleting).


********************************************************************************************************
dokcer volume:
********************************************************************************************************

--> Volume is simply a directory inside our container 
--> Firstly, we have to declare the directory as a volume and then share volume 
--> Even if we stop container , still we can access volume
--> Volume will be created in one container
--> We need to declare a directory as a volume only while creating container
--> we cant create volume from existing container
--> we can share one volume across any number of container
--> volume will not be included when we update an image
--> we can mapped volume in two ways 1) Contaoner <----> Contaner 2) Host <-----> Container

********************************************************************************************************
Benefits of Volume in Docker
********************************************************************************************************
--> Decoupling Container from Storage
--> Share Volume among different Container
--> Attach Volume to conatainer
--> On deleting caontainer volume does not deleted

********************************************************************************************************
Steps to create Volunme in Docker:
********************************************************************************************************
--> Create volume from Docker file :Create DockerFile and write given code in Dockerfile
    # vim Dockerfile

FROM ubuntu
VOLUME ["/myvolume"]

now save these file

--> Then Create Image from Above Dockerfile 
     # docker build -t ubuntu . (ubuntu is the image new)

--> Now Create container from above image and run it 
     # docker run -it --name mayur ubuntu /bin/bash (mayur::container name , ubuntu::image)

--> we will get myvolume in root dir
     # ls

-->NOW share the myvolume with another container (container <---> container)
     # docker run -it --name pawar --privileged-true --volumes-from mayur ubuntu /bin/bash

******************************************************************************************************

